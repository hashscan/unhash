.container {
  max-height: 420px;
  overflow-y: auto;
  padding: 16px 24px;
  background: var(--color-slate-7);
}

.grid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-gap: 8px;
  position: relative;
}

/**
* rootMargin option in react-infinite-scroll-hook is currently broken, so here is a workaround
* to make it possible to trigger loading before reaching the end of scrollable area
*/
.sentry {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 160px;
  pointer-events: none;
}

.cell {
  background: var(--color-slate-6);
  border-radius: var(--radii-sm);
  transition: background 0.6s ease, box-shadow 0.2s ease;
  position: relative;
  overflow: hidden;

  aspect-ratio: 1 / 1; /* square, see polyfill below */
}

@supports not (aspect-ratio: 1 / 1) {
  .cell {
    height: 160px;
  }
}

.cell.cellLoading {
  background: linear-gradient(
    115deg,
    var(--color-slate-6) 25%,
    var(--color-slate-7),
    var(--color-slate-6) 75%
  );
  background-size: 300% 100%;
  animation: gradient 1.5s ease-in-out reverse infinite;
}

@keyframes gradient {
  0% {
    background-position: 0%;
  }
  100% {
    background-position: 300%;
  }
}

.nftPreview {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: opacity 0.5s ease;
  opacity: 0;
  background-size: cover;
  cursor: pointer;

  border: 1px solid var(--color-slate-6); /* so that images with white background don't blend in */
  border-radius: var(--radii-sm);
}

.nftPreviewVisible {
  opacity: 1;
}

.nftPreviewSelected {
  box-shadow: inset 0 0 0 3px var(--color-green-dark), inset 0 0 0px 5px var(--color-slate-6),
    0px -1px 12px 0px rgb(var(--color-slate-1-rgb) / 0.1);
  border-color: var(--color-green-dark);
}
